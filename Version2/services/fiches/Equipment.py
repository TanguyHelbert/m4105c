#!/usr/bin/ens python3.4"""name : EquNomnumb : EquipementIdnumb2 : InsNumeroInstall"""import codecsimport jsonimport csvclass Equipment:	"""docstring for Equipment"""	def __init__(self, name, numb, numb2):		self.name = name		self.numb = numb		self.numb2 = numb2	"""return the reprsentation of the object when called raw"""	def __repr__(self):		return "{} - {} - {}".format(self.numb, self.name, self.numb2)	"""return the sql request to create the table"""	def sql_create(self):		return "CREATE TABLE IF NOT EXISTS Equipment (name text, numb text, numb2 text)"	"""return the sql request to insert into the table"""	def sql_insert(self):		valuess = (str(self.numb), str(self.name))		return "INSERT INTO Equipment VALUES (\"{1}\", \"{0}\", \"{2}\")".format(self.numb, self.name.replace("\"",""), self.numb2)"""create the list of json data"""def parse_json_equipment(json_file):	equipment = [] # empty list		json_data = codecs.open(json_file, encoding="utf-8").read() # take all items in format json	data = json.loads(json_data) # take the json data and make it into a list attribute:value	for item in data["data"]:		equipment.append(Equipment(item["EquNom"], item["EquipementId"], item["InsNumeroInstall"]))	return equipment"""create the list of csv data"""def parse_csv_equipment(csv_file):        equipment = [] # empty list        with open(csv_file, 'rt') as csvfile: # open the csv file                equipmentReader = csv.reader(csvfile, delimiter=',', quotechar='"') # take the csv data and make it into a list                for row in equipmentReader:                        equipment.append(Equipment(row[3], row[2], row[4]))                return equipment